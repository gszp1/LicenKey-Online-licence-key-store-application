# Local config
spring:
  application:
    name: Backend
  datasource:
    url: jdbc:postgresql://localhost:5432/licen_key_db
    username: licen_key_user
    password: "2lJ1c_yC#1MJ0e().k{p(9A"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
    open-in-view: false
    show-sql: false
  kafka:
    producer:
      bootstrap-servers: localhost:9093
      retries: 3
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      orders-topic: orders
      notification-topic: notifications
  cors:
    allowed-host: 'http://localhost'
server:
  port: 9090
secret_key: 2971612730793f5c5e2637753066234d2159413339745979547873513f
# In milliseconds
expiration_time: 3600000



#Container config
---

spring:
  config:
    activate:
      on-profile: cloud
  application:
    name: Backend
  datasource:
    url: "${DATASOURCE_URL}"
    username: "${DATASOURCE_USER}"
    password: "${DATASOURCE_PASSWORD}"
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
    open-in-view: false
    show-sql: false
  kafka:
    producer:
      bootstrap-servers: "${KAFKA_BOOTSTRAP_SERVER}"
      retries: "${RETRIES}"
      acks: "${ACKS}"
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      orders-topic: "${ORDERS_TOPIC}"
      notification-topic: "${NOTIFICATION_TOPIC}"
  cors:
    allowed-host: 'http://192.168.56.1'
server:
  port: 9000
secret_key: 2971612730793f5c5e2637753066234d2159413339745979547873513f
expiration_time: 3600000